/* 
 *  Transmission
 *
 *  Transmission is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Wed May 20 17:30:41 2009.
 **********************************************************************************
 *  Copyright 2008
 *
 */

#ifndef __TRANSMISSION_H__
#define __TRANSMISSION_H__

#include <QtCore>

class Transmission : public QObject { 
    Q_OBJECT

public:
    Transmission();
    Transmission(const Transmission&);
    Transmission & operator=(const Transmission&/*val*/);

    /* Type:
       Type of transmission, possible values are:
       1 = single occurrence
       2 = periodic
       3 = synchronic
       4 = on change */
    void setType(int val);
    int getType() const;

    /* Period:
       Specifies he time between two periodic updates in seconds */
    void setPeriod(float val);
    float getPeriod() const;
    bool hasPeriod();
    QString toXML();
    QString toString(QString lead);
    QString encode(QString str);

private:
    int m_type;
    float m_period;
    bool m_periodPresent;

}; 

#endif

