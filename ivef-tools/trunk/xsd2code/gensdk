HOME=`pwd`

OSX=`echo $OSTYPE | cut -c -6`

function buildGenerator {
	qmake xsd2code.pro
        if [ "$OSX" = "darwin" ] 
	then
            xcodebuild -project xsd2code.xcodeproj
        else
	    make -j 12
	fi
}

function genObjC {
   	rm $TARGET/ivef-objc/Classes/*.m 2>/dev/null
	rm $TARGET/ivef-objc/Classes/*.h 2>/dev/null
	bin/xsd2code --file=$XSDFILE --out=$TARGET/ivef-objc/Classes --prefix=IL --objc
        
        if [ "$OSX" = "darwin" ] 
	then
            cd $TARGET/ivef-objc
            export EXECUTABLE_NAME=IVEF
    	    xcodebuild -project IVEF.xcodeproj
            cd $HOME
        fi
}

function genQt {
	rm $TARGET/ivef-qt/*.cpp 2>/dev/null
	rm $TARGET/ivef-qt/*.o 2>/dev/null
	rm $TARGET/ivef-qt/*.h 2>/dev/null
	bin/xsd2code --file=$XSDFILE --out=$TARGET/ivef-qt/ --prefix=IVEF
	cd $TARGET/ivef-qt/

        if [ "$OSX" = "darwin" ] 
	then
	    qmake ivef.pro
    	    xcodebuild -project ivef.xcodeproj
        else
	    qmake ivef.pro
	    make -j 12
	    qmake ivef-static.pro
	    make -j 12
	fi
	cd $HOME
}

function genPHP {
	rm $TARGET/ivef-php/* 2>/dev/null
	bin/xsd2code --file=$XSDFILE --out=$TARGET/ivef-php/ --prefix=IVEF --php
}

function genJava {
	rm $TARGET/ivef-java/ivef/* 2>/dev/null
	bin/xsd2code --file=$XSDFILE --out=$TARGET/ivef-java/ --prefix=IVEF --java
	cd $TARGET/ivef-java/ivef/
	mkdir -p classes
	rm -Rf classes/* 2>/dev/null
	javac -d classes *java
	cd classes
	jar cf ../ivef.jar ivef/*
	cd $HOME
}

function testIVEF_0_1 {
	TARGET=../../../ivef-lib/branches/IVEF_0_1_RELEASE
        
        if [ "$OSX" = "darwin" ] 
	then
            cd $TARGET/testobjc
            echo "building test application objc"
    	    xcodebuild -project testobjc.xcodeproj >/dev/null
            cd $TARGET/test-cases
            echo "running test application"
	    ./run_all_tests.sh objc
        else
            echo "cannot test objc on non-darwin plaftform"
        fi

        cd $TARGET/testqt
        qmake testqt.pro
        echo "building test application qt"
        if [ "$OSX" = "darwin" ] 
	then
    	    xcodebuild -project testqt.xcodeproj
            ./localize.sh
        else
	    make -j 12
        fi
        echo "running test application"
        cd $TARGET/test-cases
	./run_all_tests.sh qt

        cd $TARGET/testjava
        echo "building test application java"
	./mk
        cd $TARGET/test-cases
        echo "running test application"
	./run_all_tests.sh java
}

function genIVEF_0_2 {
	#XSDFILE=../../../ivef-def/trunk/specs/ivef0_2.xsd
	XSDFILE=../../../ivef-def/tags/IVEF_0_2_3/specs/ivef0_2.xsd
	TARGET=../../../ivef-lib/branches/IVEF_0_2_RELEASE
	#genObjC
	genQt
	genJava
}

function genIVEF_0_1 {
	#XSDFILE=../../../ivef-def/trunk/specs/ivef0_1.xsd
	XSDFILE=../../../ivef-def/tags/IVEF_0_1_6/specs/ivef0_1.xsd
	TARGET=../../../ivef-lib/branches/IVEF_0_1_RELEASE
	genPHP
	#genObjC
	#genQt
	#genJava
}

buildGenerator
genIVEF_0_1
#testIVEF_0_1
#genIVEF_0_2
